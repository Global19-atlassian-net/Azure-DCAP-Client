environment:
  host:
    os: windows
  runtime:
    provider: appcontainer
    image: cdpxwin1809.azurecr.io/user/azure-acc:1.7
artifact_publish_options:
  publish_to_legacy_artifacts: true
  publish_to_cloudvault_artifacts: true
workspace_options:
  force_workspace_wipe: true
  enable_git_long_paths: true
  show_global_sub_tasks: true
  show_user_sub_tasks: true
        
package_sources:
  nuget:
    config_files:
      - include:
         - "src\\Windows\\dll\\nuget.config"
    feeds:
      Toolset: https://msazure.pkgs.visualstudio.com/_packaging/Toolset/nuget/v3/index.json
      Official: https://msazure.pkgs.visualstudio.com/_packaging/Official/nuget/v3/index.json
      Nuget.Org: https://api.nuget.org/v3/index.json
  
restore:
  commands:
    # This step will install dependencies like OE-SDK
    - !!defaultcommand
      name: 'Install Dependencies'
      command: 'build/Phase1/install-dep.cmd'   
    
build:
  commands:
    - !!buildcommand
      name: 'Build Azure-DCAP-Client'
      command: '.pipelines/build.cmd'
      artifacts:
        - from: 'src/Windows/Out/AzureDCAPClient'
          to: 'AzureDCAPClient'
          include:
            - '**/*'
          signing_options:
            profile: 'internal_azure_service'
            sign_inline: true  # This does signing a soon as this command completes
      logs:
        - include:
            - '*.log'
            
    - !!defaultcommand
      name: 'Post Build'
      command: 'build/Phase1/post-build.cmd'
      fail_on_stderr: true    

package:
  commands:
    # This step will package the artifacts
    - !!buildcommand
      name: 'Package Azure-DCAP-Client'
      command: 'build/Phase1/package.cmd'
      artifacts:
        - from: 'src/Out/Package'
          to: 'Nuget'
          include:
            - '**/*'